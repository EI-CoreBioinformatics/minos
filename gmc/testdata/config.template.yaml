#  Configuration file for Mikado. Sections:
#  - log_settings: settings related to the verbosity of logs.
#  - db_settings: Database settings, for Mikado serialise and pick.
#  - reference: Settings related to the genome reference.
#  - prepare: settings related to the Mikado prepare stage
#  - serialise: settings related to the Mikado serialise stage
#  - pick: settings related to the Mikado pick stage
#  - multiprocessing_method: which method (fork, spawn, forkserver) Mikado should
#  use for multiprocessing.
align_methods: {}
asm_methods: {}
blastx:
  chunks: 10
  evalue: 1.0e-07
  max_target_seqs: 10
  prot_db: {}
db_settings:
  #  Settings related to DB connection. Parameters:
  #  db: the DB to connect to. Required. Default: mikado.db
  #  dbtype: Type of DB to use. Choices: sqlite, postgresql, mysql. Default: sqlite.
  #  dbhost: Host of the database. Unused if dbtype is sqlite. Default: localhost
  #  dbuser: DB user. Default: 
  #  dbpasswd: DB password for the user. Default: 
  #  dbport: Integer. It indicates the default port for the DB.
  db: mikado.db
  dbtype: sqlite
pick:
  #  Parameters related to the Mikado pick stage.
  #  - alternative_splicing: Parameters related to which AS events to consider as
  #  valid during picking.
  #  - chimera_split: parameters related to splitting of transcripts in the presence
  #  of multiple ORFs
  #  - files: input and output files
  #  - run_options: generic options related to the run, eg number of processors to
  #  use.
  #  - scoring_file: a scoring file for the analysis. Default: plants.yaml.
  alternative_splicing:
    #  Parameters related to alternative splicing reporting.
    #  - report: whether to report at all or not the AS events.
    #  - max_isoforms: Maximum number of isoforms per locus. 1 implies no AS reported.
    #  Default: 3
    #  - only_confirmed_introns: bring back AS events only when their introns are
    #  either
    #   present in the primary transcript or in the set of confirmed introns.
    keep_retained_introns: false
    max_isoforms: 10
    min_cdna_overlap: 0.6
    min_cds_overlap: 0.6
    min_score_perc: 0.5
    only_confirmed_introns: true
    pad: true
    redundant_ccodes:
    - c
    - m
    - _
    - '='
    - n
    report: true
    ts_distance: 1500
    ts_max_splices: 0
    valid_ccodes:
    - j
    - J
    - G
    - h
  chimera_split:
    #  Parameters related to the splitting of transcripts in the presence of
    #  two or more ORFs. Parameters:
    #  - execute: whether to split multi-ORF transcripts at all. Boolean.
    #  - blast_check: whether to use BLAST information to take a decision. See blast_params
    #  for details.
    #  - blast_params: Parameters related to which BLAST data we want to analyse.
    blast_check: true
    blast_params:
      #  Parameters for the BLAST check prior to splitting.
      #  - evalue: Minimum evalue for the whole hit. Default: 1e-6
      #  - leniency: One of STRINGENT, LENIENT, PERMISSIVE. Default: LENIENT
      #  - max_target_seqs: maximum number of hits to consider. Default: 3
      leniency: PERMISSIVE
    execute: true
  clustering:
    #  Parameters related to the clustering of transcripts into loci.
    #  - flank: maximum distance for transcripts to be clustered within the same superlocus.
    cds_only: false
    flank: 200
    min_cdna_overlap: 0.2
    min_cds_overlap: 0.2
    purge: true
    simple_overlap_for_monoexonic: true
  files:
    #  Input and output files for Mikado pick.
    #  - gff: input GTF/GFF3 file. Default: mikado_prepared.gtf
    #  - loci_out: output GFF3 file from Mikado pick. Default: mikado.loci.gff3
    #  - subloci_out: optional GFF file with the intermediate subloci. Default: no
    #  output
    #  - monoloci_out: optional GFF file with the intermediate monoloci. Default:
    #  no output
    #  - log: log file for this step.
    input: mikado_prepared.gtf
  fragments:
    #  Parameters related to the handling of fragments.
    #  - remove: boolean. Whether to remove fragments or leave them, properly tagged.
    max_distance: 2000
    remove: true
    valid_class_codes:
    - p
    - P
    - x
    - X
    - i
    - m
    - _
    - e
    - o
  run_options:
    #  Generic run options.
    #  - procs: number of processes to use. Default: 1
    #  - intron_range: A range where most of the introns (99%) should fall into. Transcripts
    #  with too many
    #   introns larger or smaller than what is defined in this range will be penalised
    #   in the scoring. Default: [60, 900]
    #  - preload: boolean flag. If set, the whole database will be preloaded into
    #  memory for potentially faster access.
    #  - single_thread: boolean flag. If set, multithreading will be disabled - useful
    #  for profiling and debugging.
    #  - flank: DEPRECATED. Now set in the clustering section.
    procs: 1
    single_thread: false
    intron_range:
    - 60
    - 100000
  scoring_file: 
  source_score: 
    ACOCA10068_run1_wRNA: 0
    ACOCA10068_run1_woRNA: 0
    ACOCA10068_run2_woRNA: 0
    Human_coding: 0
    Mouse_coding: 0
    Rat_coding: 0
    Mikado_gold: 0
prepare:
  #  Options related to Mikado prepare. Possibilities:
  #  - lenient: whether to activate the lenient mode of Mikado.
  #  - canonical: which combinations of donor and acceptor sites are considered
  #  as valid.
  canonical:
  - - GT
    - AG
  - - GC
    - AG
  - - AT
    - AC
  lenient: false
  #  Options related to the input data preparation.
  #  - procs: Number of processes to use.
  #  - strand_specific: if set to True, transcripts will be assumed to be in the correct
  #  orientation, no strand flipping or removal
  #  - strip_cds: Boolean. It indicates whether to remove the CDS from the predictions
  #  during preparation.
  files:
    gff:
    - ACOCA10068_run1_wRNA.gff
    - ACOCA10068_run1_woRNA.gff
    - ACOCA10068_run2_woRNA.gff
    - Human_coding.gff
    - Mouse_coding.gff
    - Rat_coding.gff
    - Mikado_gold.gff
    labels:
    - ACOCA10068_run1_wRNA
    - ACOCA10068_run1_woRNA
    - ACOCA10068_run2_woRNA
    - Human_coding
    - Mouse_coding
    - Rat_coding
    - Mikado_gold
    log: prepare.log
    out: mikado_prepared.gtf
    out_fasta: mikado_prepared.fasta
    output_dir: .
    strand_specific_assemblies: []
  procs: 1
  strand_specific: true
reference:
  genome: mAcoCah1.genome.fa
  max_intron: 100000
  min_intron: 20
serialise:
  #  Options related to serialisation
  #  - force: whether to drop and reload everything into the DB
  #  - max_regression: if the ORF lacks a valid start site, this percentage indicates
  #  how far
  #    along the sequence Mikado should look for a good start site. Eg. with a value
  #  of 0.1,
  #    on a 300bp sequence with an open ORF Mikado would look for an alternative in-frame
  #  start codon
  #    in the first 30 bps (10% of the cDNA).
  #  - procs: Number of processors to use. Default: 1.
  files:
    blast_targets: []
    external_scores: null
    junctions:
    - portcullis_filtered.pass.junctions.union.bed
    log: serialise.log
    orfs: []
    output_dir: .
    transcripts: mikado_prepared.fasta
    xml: []
  max_regression: 0.1
  procs: 1
portcullis:
  #  Options related to portcullis
  canonical_juncs: C,S
  do: true

pick:
  #  Parameters related to the Mikado pick stage.
  #  - alternative_splicing: Parameters related to which AS events to consider as
  #  valid during picking.
  #  - chimera_split: parameters related to splitting of transcripts in the presence
  #  of multiple ORFs
  #  - files: input and output files
  #  - run_options: generic options related to the run, eg number of processors to
  #  use.
  #  - scoring_file: a scoring file for the analysis. Default: plants.yaml.
  alternative_splicing:
    #  Parameters related to alternative splicing reporting.
    #  - report: whether to report at all or not the AS events.
    #  - max_isoforms: Maximum number of isoforms per locus. 1 implies no AS reported.
    #  Default: 3
    #  - only_confirmed_introns: bring back AS events only when their introns are
    #  either
    #   present in the primary transcript or in the set of confirmed introns.
    keep_retained_introns: false
    max_isoforms: 10
    min_cdna_overlap: 0.6
    min_cds_overlap: 0.6
    min_score_perc: 0.5
    only_confirmed_introns: true
    pad: true
    redundant_ccodes:
    - c
    - m
    - _
    - '='
    - n
    report: true
    ts_distance: 1500
    ts_max_splices: 0
    valid_ccodes:
    - j
    - J
    - G
    - h
  chimera_split:
    #  Parameters related to the splitting of transcripts in the presence of
    #  two or more ORFs. Parameters:
    #  - execute: whether to split multi-ORF transcripts at all. Boolean.
    #  - blast_check: whether to use BLAST information to take a decision. See blast_params
    #  for details.
    #  - blast_params: Parameters related to which BLAST data we want to analyse.
    blast_check: true
    blast_params:
      #  Parameters for the BLAST check prior to splitting.
      #  - evalue: Minimum evalue for the whole hit. Default: 1e-6
      #  - leniency: One of STRINGENT, LENIENT, PERMISSIVE. Default: LENIENT
      #  - max_target_seqs: maximum number of hits to consider. Default: 3
      leniency: PERMISSIVE
    execute: true
  clustering:
    #  Parameters related to the clustering of transcripts into loci.
    #  - flank: maximum distance for transcripts to be clustered within the same superlocus.
    cds_only: false
    flank: 200
    min_cdna_overlap: 0.2
    min_cds_overlap: 0.2
    purge: true
    simple_overlap_for_monoexonic: true
  files:
    #  Input and output files for Mikado pick.
    #  - gff: input GTF/GFF3 file. Default: mikado_prepared.gtf
    #  - loci_out: output GFF3 file from Mikado pick. Default: mikado.loci.gff3
    #  - subloci_out: optional GFF file with the intermediate subloci. Default: no
    #  output
    #  - monoloci_out: optional GFF file with the intermediate monoloci. Default:
    #  no output
    #  - log: log file for this step.
    input: mikado_prepared.gtf
  fragments:
    #  Parameters related to the handling of fragments.
    #  - remove: boolean. Whether to remove fragments or leave them, properly tagged.
    max_distance: 2000
    remove: true
    valid_class_codes:
    - p
    - P
    - x
    - X
    - i
    - m
    - _
    - e
    - o
  run_options:
    #  Generic run options.
    #  - procs: number of processes to use. Default: 1
    #  - intron_range: A range where most of the introns (99%) should fall into. Transcripts
    #  with too many
    #   introns larger or smaller than what is defined in this range will be penalised
    #   in the scoring. Default: [60, 900]
    #  - preload: boolean flag. If set, the whole database will be preloaded into
    #  memory for potentially faster access.
    #  - single_thread: boolean flag. If set, multithreading will be disabled - useful
    #  for profiling and debugging.
    #  - flank: DEPRECATED. Now set in the clustering section.
    procs: 1
    single_thread: false
    intron_range:
    - 60
    - 900
  scoring_file: Melia_azedarach.yaml
  source_score:
    Capsella_grandiflora_coding: 0
    Cassava_coding: 0
    Castor_bean_coding: 0
    Clementine_coding: 0
    Cotton_coding: 0
    MELAZ155640_run1_wRNA: 0
    MELAZ155640_run2_woRNA: 0
    MELAZ155640_run3_woRNA: 0
    Mikado_gold: 0
    Poplar_coding: 0
    Purple_osier_willow_coding: 0
    Sweet_orange_coding: 0
    Thale_cress_coding: 0
    Turnip_mustard_coding: 0
prepare:
  #  Options related to Mikado prepare. Possibilities:
  #  - lenient: whether to activate the lenient mode of Mikado.
  #  - canonical: which combinations of donor and acceptor sites are considered
  #  as valid.
  canonical:
  - - GT
    - AG
  - - GC
    - AG
  - - AT
    - AC
  lenient: false
  #  Options related to the input data preparation.
  #  - procs: Number of processes to use.
  #  - strand_specific: if set to True, transcripts will be assumed to be in the correct
  #  orientation, no strand flipping or removal
  #  - strip_cds: Boolean. It indicates whether to remove the CDS from the predictions
  #  during preparation.
  files:
    gff:
    - Capsella_grandiflora_coding.gff
    - Cassava_coding.gff
    - Castor_bean_coding.gff
    - Clementine_coding.gff
    - Cotton_coding.gff
    - MELAZ155640_run1_wRNA.gff
    - MELAZ155640_run2_woRNA.gff
    - MELAZ155640_run3_woRNA.gff
    - Mikado_gold.gff
    - Poplar_coding.gff
    - Purple_osier_willow_coding.gff
    - Sweet_orange_coding.gff
    - Thale_cress_coding.gff
    - Turnip_mustard_coding.gff
    labels:
    - Capsella_grandiflora_coding
    - Cassava_coding
    - Castor_bean_coding
    - Clementine_coding
    - Cotton_coding
    - MELAZ155640_run1_wRNA
    - MELAZ155640_run2_woRNA
    - MELAZ155640_run3_woRNA
    - Mikado_gold
    - Poplar_coding
    - Purple_osier_willow_coding
    - Sweet_orange_coding
    - Thale_cress_coding
    - Turnip_mustard_coding
    log: prepare.log
    out: mikado_prepared.gtf
    out_fasta: mikado_prepared.fasta
    output_dir: .
    strand_specific_assemblies: []
  procs: 1
  strand_specific: true
reference:
  genome: Melia_azedarach.genome.fasta
  max_intron: 10000
  min_intron: 20
serialise:
  #  Options related to serialisation
  #  - force: whether to drop and reload everything into the DB
  #  - max_regression: if the ORF lacks a valid start site, this percentage indicates
  #  how far
  #    along the sequence Mikado should look for a good start site. Eg. with a value
  #  of 0.1,
  #    on a 300bp sequence with an open ORF Mikado would look for an alternative in-frame
  #  start codon
  #    in the first 30 bps (10% of the cDNA).
  #  - procs: Number of processors to use. Default: 1.
  files:
    blast_targets: []
    external_scores: null
    junctions:
    - portcullis_filtered.pass.junctions.union.score_07.bed
    log: serialise.log
    orfs: []
    output_dir: .
    transcripts: mikado_prepared.fasta
    xml: []
  max_regression: 0.1
  procs: 1
portcullis:
  #  Options related to portcullis
  canonical_juncs: C,S
  do: true
